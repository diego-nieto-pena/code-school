server.port: 7002
server.error.include-message: always

spring.data.mongodb:
  host: localhost
  port: 27017
  database: recommendation-db

# consumer function name
spring.cloud.function.definition: messageProcessor

spring.cloud.stream:
  defaultBinder: rabbit
  default.contentType: application/json
# bindings.<functionName>-in-<index>
  # functionName: messageProcessor
  # index: 0, unless the function requires multiple input arguments
  bindings.messageProcessor-in-0:
    destination: recommendations # topic name from which messages will be consumed
    # message sent to recommendations topic will be delivered to recommendation service instances
    group: recommendationsGroup

spring.cloud.stream.bindings.messageProcessor-in-0.consumer:
  maxAttempts: 3
  backOffInitialInterval: 500
  backOffMaxInterval: 1000
  backOffMultiplier: 2.0

spring.cloud.stream.rabbit.bindings.messageProcessor-in-0.consumer:
  autoBindDlq: true
  republishToDlq: true

spring.cloud.stream.kafka.bindings.messageProcessor-in-0.consumer:
  enableDlq: true

spring.cloud.stream.kafka.binder:
  brokers: 127.0.0.1
  defaultBrokerPort: 9092

spring.rabbitmq:
  host: 127.0.0.1
  port: 5672
  username: guest
  password: guest

logging:
  level:
    root: INFO
    se.magnus: DEBUG

---
spring.config.activate.on-profile: docker

server.port: 8080

spring.data.mongodb.host: mongodb